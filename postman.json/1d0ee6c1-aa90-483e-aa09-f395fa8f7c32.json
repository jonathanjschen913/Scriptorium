{"info":{"_postman_id":"1d0ee6c1-aa90-483e-aa09-f395fa8f7c32","name":"Code Execution","description":"1.1: Code that does not belong to a code template with no stdin and successful return\n\n1.2: Code that does not belong to a code template with no stdin and some compile-time or runtime error\n\n2.1: Code that does not belong to a code template with no stdin and successful return\n\n2.1: Code that does not belong to a code template with stdin and some compile-time or runtime error","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Create and execute code 1.1","item":[{"name":"executing python code","id":"cf6c742a-c5c6-42a2-bc10-74ee0a2bef3b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\":\"a = 5\\nb = 10\\nprint(a + b)\",\r\n    \"language\":\"python\",\r\n    \"stdin\":\"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing java code","id":"576e89f3-119e-49ee-8ebd-f23872c679b1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\":\"public class HelloWorld { public static void main(String[] args) { System.out.println(\\\"Hello, World!\\\"); } }\",\r\n    \"language\":\"java\",\r\n    \"stdin\":\"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing javascript code","id":"b219ef19-8032-4cc7-9fe5-bf9e5237b646","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"const a = 5;\\nconst b = 10;\\nconsole.log(`Sum: ${a + b}`);\",\r\n    \"language\": \"javaScript\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c code","id":"71fa95c1-0e5c-4ee9-b54c-47fad2e91966","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a = 5;\\n    int b = 10;\\n    printf(\\\"Sum: %d\\\\n\\\", a + b);\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c++ code","id":"ce8b6b40-3955-486e-99f0-cb588222e3f9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a = 5;\\n    int b = 10;\\n    cout << \\\"Sum: \\\" << (a + b) << endl;\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]}],"id":"d37c3473-2764-479f-8b3c-07234191fbcb","description":"Creating and Executing code that does not belong to any code templates and is not supposed to return any errors."},{"name":"Create and execute code 1.2","item":[{"name":"executing c with compile time error (should be 400 bad response, not 500 interval server error)","id":"646fb533-0b37-419a-aff5-0e9bd7deeb36","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a = 5;\\n    int b = 10;\\n    printf(\\\"Sum: %d\\\\n\\\", a + b)\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c++ code with compile time error (should be 400, not 500)","id":"dbc599df-dc1f-4775-b94b-ec778fe275ad","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a = 5;\\n    int b = 10;\\n    cout << \\\"Sum: \\\" << (a + b) << endl\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing java code with compile time error (should be 400, not 500)","id":"fe32449c-5dd1-4770-a538-e3bf5a08651f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"public class HelloWorld { public static void main(String[] args) { System.out.println(\\\"Hello, World!\\\"); }\",\r\n    \"language\": \"java\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing javascript code with syntax error (should be 400, not 500)","id":"1535c6e8-6116-49ee-8807-16767f2a9167","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"const a = 5;\\nconst b = 10;\\nconsole.log(`Sum: ${a + b}`;\\n\",\r\n    \"language\": \"javaScript\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing python code with runtime error (should be 400, not 500)","id":"5d44e4c5-d664-4c9a-8d4f-3361d1118eef","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"a = 5\\nb = 0\\nprint(a / b)\",\r\n    \"language\": \"python\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]}],"id":"8bec43bf-7b2c-4fcd-8d92-a064b384cb70","description":"Creating and Executing code that does not belong to any code templates and is supposed to return either a runtime or a compile-time error with a 400 bad request."},{"name":"Create and execute code 2.1","item":[{"name":"executing python code with stdin","id":"4ffc6df1-6f4d-42a8-b400-1b03795806ae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"a = int(input())\\nb = int(input())\\nprint(f'Sum: {a + b}')\",\r\n    \"language\": \"python\",\r\n    \"stdin\": \"5\\n10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c code with stdin","id":"9e2ec2f9-0eaf-4386-a68b-3eff77fa442a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a, b;\\n    scanf(\\\"%d %d\\\", &a, &b);\\n    printf(\\\"Sum: %d\\\\n\\\", a + b);\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c++ code with stdin","id":"ed9555af-2978-432a-9318-b5515598fbdf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a, b;\\n    cin >> a >> b;\\n    cout << \\\"Sum: \\\" << (a + b) << endl;\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing java code with stdin","id":"85506a9d-4cb3-4a8e-92ef-8ad807d8bfc7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"import java.util.Scanner;\\n\\npublic class HelloWorld {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int a = scanner.nextInt();\\n        int b = scanner.nextInt();\\n        System.out.println(\\\"Sum: \\\" + (a + b));\\n    }\\n}\",\r\n    \"language\": \"java\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing javascript code with stdin (does not support stdin!)","id":"39e5a899-8c3f-46d2-8957-5350a0f28c10","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"const readline = require('readline');\\nconst rl = readline.createInterface({ input: process.stdin, output: process.stdout });\\n\\nrl.question('', (a) => {\\n    rl.question('', (b) => {\\n        console.log(`Sum: ${parseInt(a) + parseInt(b)}`);\\n        rl.close();\\n    });\\n});\",\r\n    \"language\": \"javaScript\",\r\n    \"stdin\": \"5\\n10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]}],"id":"0f3af63c-da60-461d-a9ce-7709c3895e99","description":"Create and execute code that takes input from stdin and is supposed to return successfully (with the exception of javascript, which does not have a \"stdin\")."},{"name":"Create and execute code 2.2","item":[{"name":"executing c code with stdin and compile time error","id":"98cf5a41-1769-45d9-b302-17ac08b9f766","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a, b;\\n    scanf(\\\"%d %d\\\", &a, &b)\\n    printf(\\\"Sum: %d\\\\n\\\", a + b);\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c code with stdin and runtime error","id":"c0932e15-9ee2-43a6-ac35-6b8c1606cf76","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a, b;\\n    scanf(\\\"%d %d\\\", &a, &b);\\n    printf(\\\"Sum: %d\\\\n\\\", a / b);\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"5 0\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c++ code with stdin and compile time error","id":"ccd3cc2f-95c4-44f5-9b58-c9e41e8041b5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a, b;\\n    cin >> a >> b\\n    cout << \\\"Sum: \\\" << (a + b) << endl;\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c++ code with stdin and runtime error","id":"753abf4c-3d09-4d03-b7c4-e6dd00921699","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a, b;\\n    cin >> a >> b;\\n    cout << \\\"Sum: \\\" << (a / b) << endl;\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"5 0\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing java code with stdin and compile time error","id":"4c1d08ba-5d72-4446-a992-70ab3b05adf0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"import java.util.Scanner;\\n\\npublic class HelloWorld {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int a = scanner.nextInt();\\n        int b = scanner.nextInt();\\n        System.out.println(\\\"Sum: \\\" + (a + b))\\n    }\\n}\",\r\n    \"language\": \"java\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing java code with stdin and runtime error","id":"5c787f5f-2e23-469d-ac93-6253def692e9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"import java.util.Scanner;\\n\\npublic class HelloWorld {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int a = scanner.nextInt();\\n        int b = scanner.nextInt();\\n        System.out.println(\\\"Sum: \\\" + (a / b));\\n    }\\n}\",\r\n    \"language\": \"java\",\r\n    \"stdin\": \"5 0\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing python code with syntax error","id":"4596b275-6250-4c44-a16b-717c8fe79d28","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"a = int(input())\\nb = int(input())\\nprint(f'Sum: {a + b}'\",\r\n    \"language\": \"python\",\r\n    \"stdin\": \"5\\n10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing python code with stdin and runtime error","id":"39a5b9f7-dc4f-4ad9-a4f7-62c0cda54db1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"a = int(input())\\nb = int(input())\\nprint(f'Sum: {a / b}')\",\r\n    \"language\": \"python\",\r\n    \"stdin\": \"5\\n0\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]}],"id":"2717d56b-6444-4518-9300-3419cc573cd4","description":"Creating and Executing code that does not belong to any code templates and is supposed to return either a runtime or a compile-time error with a 400 bad request while also taking input from stdin.\n\nJavascript does not have stdin. Please reference 2.1 \"executing javascript code with stdin (does not support stdin!)\""},{"name":"Create code 1.1","item":[{"name":"creating python code struct that belongs to a code template","id":"1498547e-0434-4de6-be6f-0101c3531ace","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\":\"a = 5\\nb = 10\\nprint(a + b)\",\r\n    \"language\":\"python\",\r\n    \"stdin\":\"\",\r\n    \"codeTemplateId\":\"1\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec/create","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec","create"]}},"response":[]}],"id":"f5e11279-ef85-4600-81bb-0a52a7ba8013"},{"name":"Run code 1.1","item":[{"name":"execute code from code template based on code template id","id":"6d74e5c6-9cd0-4e73-bd87-cf1963161eea","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"codeTemplateId\":\"2\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec/run","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec","run"]}},"response":[]}],"id":"11404e49-4ca2-4092-8951-ab85aabf5a51"}]}