{"info":{"_postman_id":"b87e873d-6f6e-4baa-a479-8fd12b491b91","name":"Comment","description":"This collection has three folders: creation, modification, and report. Note that report stands for ICR, and not data analysis reports.","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Creation","item":[{"name":"Create top level comment on blog post","event":[{"listen":"prerequest","script":{"id":"ce65112b-5cb4-490b-808a-76213292514e","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}}],"id":"8833661d-c041-4811-8ef4-c020adf916af","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"body\": \"that is so interesting!\",\n    \"blogPostId\": 2\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/comment/create","protocol":"http","host":["localhost"],"port":"3000","path":["api","comment","create"]},"description":"## Create a top level comment to a blog post\n\n`POST /api/comment/create`\n\nThe endpoint allows an authenticated user to create a new comment associated with a specific blog post.\n\n### Request Body\n\n- `body` (string, required): The content of the comment.\n    \n- `blogPostId` (number, required): The ID of the blog post to which the comment is being added.\n    \n- `parentId` (number, optional): The ID of the parent comment, if any.\n    \n\n### Header\n\n- `Authorization` (string, required): Bearer token for access authentication\n    \n- `Refresh-Token` (string, required): Refresh token for access authentication\n    \n\n### Example Response\n\n``` json\n{\n    \"commentId\": 1,\n    \"userId\": 1,\n    \"body\": \"that is so interesting!\",\n    \"parentId\": null,\n    \"blogPostId\": 2,\n    \"depth\": 0,\n    \"isHidden\": false,\n    \"isDeleted\": false,\n    \"createdAt\": \"2024-11-04T22:56:38.438Z\"\n}\n\n ```"},"response":[]},{"name":"Create a reply to a comment","event":[{"listen":"prerequest","script":{"id":"95036438-2fa0-4fd0-bf85-dc8f11debc88","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}}],"id":"b4f5518d-8d49-458f-90ca-ecdd39904738","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"body\": \"i am a child\",\n    \"blogPostId\": 2,\n    \"parentId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/comment/create","protocol":"http","host":["localhost"],"port":"3000","path":["api","comment","create"]},"description":"### Reply to an existing comment\n\n`POST /api/comment/create`\n\nThis endpoint allows the user to create a new comment for a specific blog post.\n\n#### Request Body\n\n- `body` (string, required): The content of the comment.\n    \n- `blogPostId` (number, required): The ID of the blog post for which the comment is being created.\n    \n- `parentId` (number, optional): The ID of the parent comment, if any.\n    \n\n### Header\n\n- `Authorization` (string, required): Bearer token for access authentication\n    \n- `Refresh-Token` (string, required): Refresh token for access authentication\n    \n\n### Example Response\n\n``` json\n{\n    \"commentId\": 2,\n    \"userId\": 1,\n    \"body\": \"i am a child\",\n    \"parentId\": 1,\n    \"blogPostId\": 2,\n    \"depth\": 1,\n    \"isHidden\": false,\n    \"isDeleted\": false,\n    \"createdAt\": \"2024-11-04T22:59:48.511Z\"\n}\n\n ```"},"response":[]}],"id":"4bf1235f-0c4b-4a05-ba90-4ed71b6059da","description":"This folder includes the creation of top-level comments as well as replies to comments."},{"name":"Modification","item":[{"name":"Edit a comment","event":[{"listen":"prerequest","script":{"id":"1136494a-5db5-46c6-9d52-ff131cfeed43","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}}],"id":"cc1c5a13-669a-4a9d-800c-ac60836880b8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"body\": \"I am edited\",\n    \"commentId\": 2,\n    \"blogPostId\": 2\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/comment/edit","protocol":"http","host":["localhost"],"port":"3000","path":["api","comment","edit"]},"description":"## Edit Comment\n\n`PUT /api/comment/edit`\n\nThis endpoint allows an authenticated user to edit their comment on a blog post.\n\n### Request Body\n\n- `body` (string, required): The updated content of the comment.\n    \n- `commentId` (number, required): The ID of the comment to be edited.\n    \n- `blogPostId` (number, required): The ID of the blog post to which the comment belongs\n    \n\n### Header\n\n- `Authorization` (string, required): Bearer token for access authentication\n    \n- `Refresh-Token` (string, required): Refresh token for access authentication\n    \n\n### Example Response\n\n``` json\n{\n    \"commentId\": 2,\n    \"userId\": 1,\n    \"body\": \"I am edited\",\n    \"parentId\": 1,\n    \"blogPostId\": 2,\n    \"depth\": 1,\n    \"isHidden\": false,\n    \"isDeleted\": false,\n    \"createdAt\": \"2024-11-04T22:59:48.511Z\"\n}\n\n ```"},"response":[]},{"name":"Delete a comment","event":[{"listen":"prerequest","script":{"id":"e5cab476-66e6-4f9f-b6ac-394a4526f979","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}}],"id":"80061357-7eb1-4b95-afaa-a28b72e3f551","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"body":{"mode":"raw","raw":"{\n    \"commentId\": 1\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/comment/delete","protocol":"http","host":["localhost"],"port":"3000","path":["api","comment","delete"]},"description":"### Delete Comment\n\n`DELETE /api/comment/delete`\n\nThis endpoint allows an authenticated user to delete their own comment.\n\n#### Request Body\n\n- `commentId` (number, required) - The ID of the comment to be deleted.\n    \n\n#### Example Response\n\n``` json\n{\n    \"commentId\": 1,\n    \"userId\": 1,\n    \"body\": \"that is so interesting!\",\n    \"parentId\": null,\n    \"blogPostId\": 2,\n    \"depth\": 0,\n    \"isHidden\": false,\n    \"isDeleted\": true,\n    \"createdAt\": \"2024-11-04T22:56:38.438Z\"\n}\n\n ```"},"response":[]},{"name":"Vote on a comment","event":[{"listen":"prerequest","script":{"id":"e48c9177-90e0-4ef5-8f7b-53e3cfbcb6ae","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}}],"id":"3423d85b-03a2-48ed-8fe8-313df28db94e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"commentId\": 4,\n    \"voteType\": \"upvote\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/comment/vote","protocol":"http","host":["localhost"],"port":"3000","path":["api","comment","vote"]},"description":"### Vote on a Comment\n\n`POST /api/comment/vote`\n\nThis endpoint allows an authenticated user to vote on another user's comment.\n\n#### Request Body\n\n- `commentId` (number) - The ID of the comment to be deleted.\n    \n- `voteType` (string) - The type of vote the user is trying to perform; either upvote or downvote .\n    \n\n#### Example Response\n\n``` json\n{\n    \"message\": \"Upvoted comment\"\n}\n\n ```"},"response":[]}],"id":"9521c7a4-0090-4710-94f1-3ed9f9c06236"},{"name":"Report","item":[{"name":"Create a new report","event":[{"listen":"prerequest","script":{"id":"dd3534cb-6f0a-497c-bc6b-4d18bb934bea","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}}],"id":"a4dbb93d-55ab-4542-8b0b-8a82cf9722d9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"commentId\": 1,\n    \"body\": \"unnecessary\",\n    \"contentType\": \"comment\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/comment/report","protocol":"http","host":["localhost"],"port":"3000","path":["api","comment","report"]},"description":"### Report a comment\n\n`POST /api/comment/report`\n\nThis endpoint allows authenticated users to report a comment.\n\n#### Request Body\n\n- `commentId` (number): The ID of the comment being reported.\n    \n- `body` (string): The body of the report.\n    \n- `contentType` (string): The type of content being reported.\n    \n\n### Headers\n\n- `Authorization` (string, required): Bearer token for access authorization\n    \n- `Refresh-Token` (string, required): Refresh token for access authorization\n    \n\n### Example Response\n\n``` json\n{\n    \"reportId\": 1,\n    \"userId\": 1,\n    \"body\": \"unnecessary\",\n    \"isResolved\": false,\n    \"contentType\": \"comment\",\n    \"createdAt\": \"2024-11-04T23:33:56.080Z\",\n    \"blogPostId\": null,\n    \"commentId\": 1,\n    \"codeTemplateId\": null\n}\n\n ```"},"response":[]},{"name":"(ADMIN) Search reports","event":[{"listen":"prerequest","script":{"id":"efff44eb-d069-4789-b57f-7c79bca4eb34","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}}],"id":"544663ec-5678-48dc-be47-5054fed56d3f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"body":{"mode":"raw","raw":"{\r\n    \"commentId\": 1\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/comment/admin/searchReports","protocol":"http","host":["localhost"],"port":"3000","path":["api","comment","admin","searchReports"]},"description":"# Search Reports\n\n`GET /api/comment/admin/searchReports`\n\nThis endpoint allows adminstrators to retrieve a paginated list of reports on comments.\n\n### Request\n\nNo request body returns all reports.\n\n- `searchCommentId` (number, optional): Filter reports by a specific comment ID.\n    \n- `searchUserId` (number , optional): Filter reports by a specific reporter.\n    \n- `searchUnresolved` (boolean, optional): If true, filters by unresolved reports.\n    \n- `page` (number, optional): Pagination page. Defaults to 1.\n    \n- `pageSize` (number, optional): Number of reports per page.\n    \n\n### Headers\n\n- `Authorization` (string, required): Bearer token for access authorization\n    \n- `Refresh-Token` (string, required): Refresh token for access authorization\n    \n\n### Example Response\n\n``` json\n[\n    {\n        \"reportId\": 1,\n        \"userId\": 1,\n        \"body\": \"unnecessary\",\n        \"isResolved\": false,\n        \"contentType\": \"comment\",\n        \"createdAt\": \"2024-11-04T23:33:56.080Z\",\n        \"blogPostId\": null,\n        \"commentId\": 1,\n        \"codeTemplateId\": null\n    },\n    {\n        \"reportId\": 2,\n        \"userId\": 3,\n        \"body\": \"inappropriate\",\n        \"isResolved\": false,\n        \"contentType\": \"comment\",\n        \"createdAt\": \"2024-11-04T23:38:54.457Z\",\n        \"blogPostId\": null,\n        \"commentId\": 2,\n        \"codeTemplateId\": null\n    }\n]\n\n ```"},"response":[]},{"name":"(ADMIN) Resolve a report for a comment","event":[{"listen":"prerequest","script":{"id":"ee8bb20c-720d-419f-8f64-8eabdbd03d26","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"31ac6245-50e1-4d68-addc-8d585973dfd2","exec":[""],"type":"text/javascript","packages":{}}}],"id":"94cfb47e-71ec-49aa-9154-fa1c286e9b46","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"commentId\": 2,\n    \"reportId\": 2\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/comment/admin/resolveReport","protocol":"http","host":["localhost"],"port":"3000","path":["api","comment","admin","resolveReport"]},"description":"## Resolve Report Comment\n\n`POST /api/comment/admin/resolveReport`\n\nThis endpoint allows the admin to resolve a reported comment.\n\n### Request Body\n\n- `commentId` (number, required): The ID of the comment that was reported.\n    \n- `reportId` (number, required): The ID of the report associated with the comment.\n    \n\n### Headers\n\n- `Authorization` (string, required): Bearer token for access authorization\n    \n- `Refresh-Token` (string, required): Refresh token for access authorization\n    \n\n### Example Response\n\n``` json\n{\n    \"reportId\": 2,\n    \"userId\": 3,\n    \"body\": \"inappropriate\",\n    \"isResolved\": true,\n    \"contentType\": \"comment\",\n    \"createdAt\": \"2024-11-04T23:38:54.457Z\",\n    \"blogPostId\": null,\n    \"commentId\": 2,\n    \"codeTemplateId\": null\n}\n\n ```"},"response":[]},{"name":"(ADMIN) Hide a comment","event":[{"listen":"prerequest","script":{"id":"9c2eed1a-748a-4e82-b490-202f7452b255","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}}],"id":"35267ae3-012e-4130-be09-21babe48c417","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"commentId\": 2,\n    \"wantHidden\": true\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/comment/admin/hide","protocol":"http","host":["localhost"],"port":"3000","path":["api","comment","admin","hide"]},"description":"## Hide comment\n\n`POST /api/comment/admin/hide`\n\nThis endpoint allows admins to hide a specific comment.\n\n### Request Body\n\n- `commentId` (number): The ID of the comment to be hidden.\n    \n- `wantHidden` (boolean): Set to true to hide the comment.\n    \n\n### Headers\n\n- `Authorization` (string, required): Bearer token for access authorization\n    \n- `Refresh-Token` (string, required): Refresh token for access authorization\n    \n\n### Example Response\n\n``` json\n{\n    \"commentId\": 2,\n    \"userId\": 1,\n    \"body\": \"I am edited\",\n    \"parentId\": 1,\n    \"blogPostId\": 2,\n    \"depth\": 1,\n    \"isHidden\": true,\n    \"isDeleted\": false,\n    \"createdAt\": \"2024-11-04T22:59:48.511Z\"\n}\n\n ```\n\nThe response includes the updated values of the hidden comment, with the `isHidden` field set to true to indicate that the comment has been successfully hidden."},"response":[]}],"id":"27c0b53c-6a9a-472a-9da9-3e7a878dd7fa","description":"ICR for comments."}]}