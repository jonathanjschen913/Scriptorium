{"info":{"_postman_id":"fd268d82-b640-46ba-b2fa-c0be0dcddbd6","name":"User Profile","description":"This collection includes features related to a user and their profile.","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Sign up","id":"d9cbd87f-da13-4313-ad2a-5dbb5951b2e1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"username\": \"username\",\n    \"password\": \"password\",\n    \"email\": \"gmail@gmail.com\",\n    \"phoneNumber\": \"4001234567\",\n    \"firstName\": \"fn\",\n    \"lastName\": \"ln\",\n    \"avatar\": 1,\n    \"role\": \"\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/users/register","protocol":"http","host":["localhost"],"port":"3000","path":["api","users","register"]},"description":"## Register User\n\n`POST /api/users/register`\n\nThis endpoint allows the client to register a new user.\n\n### Request Body\n\n- `username` (string, required): The unique username of the user.\n    \n- `password` (string, required): The password for the user account.\n    \n- `email` (string, required): The unique email address of the user.\n    \n- `phoneNumber` (string, required): The unique phone number of the user.\n    \n- `firstName` (string, required): The first name of the user.\n    \n- `lastName` (string, required): The last name of the user.\n    \n- `avatar` (number, required): The avatar of the user. A preset choice of 1 or 2.\n    \n- `role` (string, optional): The role of the user. Defaults to USER\n    \n\n### Response\n\nHere's an example response\n\n``` json\n{\n    \"message\": \"User created\",\n    \"user\": {\n        \"uId\": 1,\n        \"username\": \"username\",\n        \"role\": \"USER\"\n    }\n}\n\n ```"},"response":[]},{"name":"Login","event":[{"listen":"test","script":{"id":"f872f8fc-7a41-4b7b-bdd5-f1aeb7256082","exec":["// Parse the JSON response\r","let response = pm.response.json();\r","\r","// Set the access token without the \"Bearer \" prefix\r","pm.environment.set(\"accessToken\", response.accessToken.replace(\"Bearer \", \"\"));\r","\r","// Set the refresh token\r","pm.environment.set(\"refreshToken\", response.refreshToken);\r",""],"type":"text/javascript","packages":{}}}],"id":"b4f6ca41-a1eb-44c6-a32c-6280f875cff7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"username\": \"username\",\n    \"password\": \"password\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/users/login","protocol":"http","host":["localhost"],"port":"3000","path":["api","users","login"]},"description":"## Login User\n\n`POST /api/users/login`\n\nThis endpoint is used to log in a user.\n\n### Request Body\n\n- `username` (string): The username of the user.\n    \n- `password` (string): The password of the user.\n    \n\n### Response\n\nUpon a successful login, the server responds with a status code of 200 and a JSON object containing the access token and refresh token.\n\nExample response:\n\n``` json\n{\n    \"accessToken\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXJuYW1lIiwidUlkIjoxLCJyb2xlIjoiVVNFUiIsImlhdCI6MTczMDc1ODIwNCwiZXhwIjoxNzMwNzYxODA0fQ.Z7Ci3uh4NtqH9GTniSnFSMuuC8l4G4F_5dwFxQjfuOU\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXJuYW1lIiwidUlkIjoxLCJyb2xlIjoiVVNFUiIsImlhdCI6MTczMDc1ODIwNCwiZXhwIjoxNzMxMzYzMDA0fQ.tcE_UPDuvHSGV0KF-oLrpqh3CubCT6luy8FwpiWuOQY\"\n}\n\n ```"},"response":[]},{"name":"View a specific user profile","id":"2250f8f6-4513-49a7-8728-cf88693c7d42","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"http://localhost:3000/api/users/1","protocol":"http","host":["localhost"],"port":"3000","path":["api","users","1"]},"description":"## Get User Details\n\n#### `GET /api/users/[id]`\n\nThis endpoint retrieves the details of a specific user.\n\n### Response\n\nThe response is in JSON format and follows the schema below:\n\nExample url: `http://localhost:3000/api/users/1`\n\n``` json\n{\n    \"uId\": 1,\n    \"username\": \"username\",\n    \"avatar\": \"/mnt/c/Users/alext/Documents/CSC309/group_7328/PP1/public/avatar/1.png\",\n    \"role\": \"USER\",\n    \"createdAt\": \"2024-11-04T22:03:00.816Z\",\n    \"blogPosts\": [],\n    \"codeTemplates\": []\n}\n\n ```"},"response":[]},{"name":"Edit your own user profile","event":[{"listen":"prerequest","script":{"id":"b7777480-f518-42e9-b7cb-88a5c7ac7e7c","exec":["// Check if accessToken exists in environment variables","if (pm.environment.get(\"accessToken\")) {","    // Set the Authorization header to use Bearer token from accessToken variable","    pm.request.headers.add({","        key: \"Authorization\",","        value: `Bearer ${pm.environment.get(\"accessToken\")}`","    });","}","","// Check if refreshToken exists in environment variables","if (pm.environment.get(\"refreshToken\")) {","    // Set the Refresh-Token header to use the refreshToken variable","    pm.request.headers.add({","        key: \"Refresh-Token\",","        value: pm.environment.get(\"refreshToken\")","    });","}"],"type":"text/javascript","packages":{}}}],"id":"5603bbc0-1bb5-45b3-87cb-bb1a2aae4eab","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"username\": \"username\",\n    \"avatar\": 2\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/users/edit?userId=1","protocol":"http","host":["localhost"],"port":"3000","path":["api","users","edit"],"query":[{"key":"userId","value":"1"}]},"description":"## Edit own profile\n\n`PUT /api/users/edit`\n\nThis API endpoint allows authenticated users to update their profile information.\n\n### Request Body\n\n- `username` (string, optional): The new username for the user.\n    \n- `email` (string, Optional): The new email address for the user\n    \n- `phoneNumber` (string, optional): The new phone number for the usre\n    \n- `firstName` (string, optional): The new first name of the user\n    \n- `lastName` (string, optional): The new last name of the user\n    \n- `avatar`: (number, optional) The new avatar information for the user. A number choice between 1-2.\n    \n\n### Headers\n\n- `Authorization` (string, required): Bearer token for access authorization\n    \n- `refresh-token` (string, required): Refresh token for access authorization\n    \n\n### Response\n\nUpon a successful update, the endpoint returns a 200 status code with a JSON response containing the updated user information, including the user ID, username, avatar, creation timestamp, blog posts, and code templates.\n\n``` json\n{\n    \"uId\": 1,\n    \"username\": \"username\",\n    \"avatar\": \"/mnt/c/Users/alext/Documents/CSC309/group_7328/PP1/public/avatars/2.png\",\n    \"createdAt\": \"2024-11-04T22:03:00.816Z\",\n    \"blogPosts\": [],\n    \"codeTemplates\": []\n}\n\n ```"},"response":[]}]}