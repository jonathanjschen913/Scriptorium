{"info":{"_postman_id":"9e9289ea-0d1c-450d-850d-0314130874b1","name":"Code Execution","description":"1.1: Code that does not belong to a code template with no stdin and successful return\n\n1.2: Code that does not belong to a code template with no stdin and some compile-time or runtime error\n\n2.1: Code that does not belong to a code template with no stdin and successful return\n\n2.1: Code that does not belong to a code template with stdin and some compile-time or runtime error","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Create and execute code 1.1","item":[{"name":"executing python code","id":"fd1fff48-ea73-48d5-9c75-d56451742656","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\":\"a = 5\\nb = 10\\nprint(a + b)\",\r\n    \"language\":\"python\",\r\n    \"stdin\":\"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]},"description":"### Create a code object that doesn't belong to a code template\n\nThis endpoint allows the creation of a code object that doesn't belong to a code template. The code object is immediately executed.\n\n#### Request Body\n\n- `body`: (string, required) The body of the code object.\n    \n- `language`: (string, required) The language in which the code is written.\n    \n- `stdin`: (string, optional) The stdin input to the program.\n    \n\n#### Response\n\nThe response status for a successful creation is `200 OK`.\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n    \"output\": \"15\\r\\n\"\n}\n\n ```"},"response":[]},{"name":"executing java code","id":"78530548-0313-44f8-bbb0-d20f0f6e0e22","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\":\"public class HelloWorld { public static void main(String[] args) { System.out.println(\\\"Hello, World!\\\"); } }\",\r\n    \"language\":\"java\",\r\n    \"stdin\":\"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing javascript code","id":"68832756-12c3-438e-9c5e-9edc85a7c638","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"const a = 5;\\nconst b = 10;\\nconsole.log(`Sum: ${a + b}`);\",\r\n    \"language\": \"javaScript\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c code","id":"5997a430-6979-41ff-9277-9e39429f2a56","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a = 5;\\n    int b = 10;\\n    printf(\\\"Sum: %d\\\\n\\\", a + b);\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c++ code","id":"af47d4a3-d778-4e69-aa33-be02d623e89e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a = 5;\\n    int b = 10;\\n    cout << \\\"Sum: \\\" << (a + b) << endl;\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]}],"id":"316af849-4c1f-4045-a32f-1dee1abb0d9c","description":"Creating and Executing code that does not belong to any code templates and is not supposed to return any errors."},{"name":"Create and execute code 1.2","item":[{"name":"executing c with compile time error (should be 400 bad response, not 500 interval server error)","id":"a5664264-bff5-432f-8e4f-e59f0ae12fb8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a = 5;\\n    int b = 10;\\n    printf(\\\"Sum: %d\\\\n\\\", a + b)\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]},"description":"### Create a code object that doesn't belong to a code template\n\nThis endpoint allows the creation of a code object that doesn't belong to a code template. The code object is immediately executed.\n\n#### Request Body\n\n- `body`: (string, required) The body of the code object.\n    \n- `language`: (string, required) The language in which the code is written.\n    \n- `stdin`: (string, optional) The stdin input to the program.\n    \n\n#### Response\n\nThe response status for a compile or a runtime error is `400 Bad Request`.\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n    \"error\": \"C:\\\\Users\\\\your_paths_here\\\\group_7328\\\\PP1\\\\generated\\\\code\\\\code_1730765913207.c: In function 'main':\\nC:\\\\Users\\\\your_paths_here\\\\group_7328\\\\PP1\\\\generated\\\\code\\\\code_1730765913207.c:6:31: error: expected ';' before 'return'\\n    6 |     printf(\\\"Sum: %d\\\\n\\\", a + b)\\n      |                               ^\\n      |                               ;\\n    7 |     return 0;\\n      |     ~~~~~~                     \\n\"\n}\n\n ```"},"response":[]},{"name":"executing c++ code with compile time error (should be 400, not 500)","id":"ed122fdc-06b0-421a-8d84-cedefb5258e5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a = 5;\\n    int b = 10;\\n    cout << \\\"Sum: \\\" << (a + b) << endl\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing java code with compile time error (should be 400, not 500)","id":"1d85c82e-370f-46dd-8848-e5e47af342f2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"public class HelloWorld { public static void main(String[] args) { System.out.println(\\\"Hello, World!\\\"); }\",\r\n    \"language\": \"java\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing javascript code with syntax error (should be 400, not 500)","id":"43296faa-60d3-4cba-8164-ffe2592d514f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"const a = 5;\\nconst b = 10;\\nconsole.log(`Sum: ${a + b}`;\\n\",\r\n    \"language\": \"javaScript\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing python code with runtime error (should be 400, not 500)","id":"fe3ab61d-7316-440f-91ba-ac988be15cc3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"a = 5\\nb = 0\\nprint(a / b)\",\r\n    \"language\": \"python\",\r\n    \"stdin\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]}],"id":"405346bc-e61d-4976-8430-77f9a5462442","description":"Creating and Executing code that does not belong to any code templates and is supposed to return either a runtime or a compile-time error with a 400 bad request."},{"name":"Create and execute code 2.1","item":[{"name":"executing python code with stdin","id":"fea1d73a-1cdf-4a20-9614-c11bfd95fc44","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"a = int(input())\\nb = int(input())\\nprint(f'Sum: {a + b}')\",\r\n    \"language\": \"python\",\r\n    \"stdin\": \"5\\n10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c code with stdin","id":"4d5ead12-ec99-4065-876c-247682536734","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a, b;\\n    scanf(\\\"%d %d\\\", &a, &b);\\n    printf(\\\"Sum: %d\\\\n\\\", a + b);\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c++ code with stdin","id":"86db8fc5-6b6c-457f-adff-143650d88543","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a, b;\\n    cin >> a >> b;\\n    cout << \\\"Sum: \\\" << (a + b) << endl;\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing java code with stdin","id":"aeb58bd4-fdf2-497b-ab05-018fd8e658f1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"import java.util.Scanner;\\n\\npublic class HelloWorld {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int a = scanner.nextInt();\\n        int b = scanner.nextInt();\\n        System.out.println(\\\"Sum: \\\" + (a + b));\\n    }\\n}\",\r\n    \"language\": \"java\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing javascript code with stdin (does not support stdin!)","id":"a4e62622-eb8f-4173-b080-19d34d93f1e1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"const readline = require('readline');\\nconst rl = readline.createInterface({ input: process.stdin, output: process.stdout });\\n\\nrl.question('', (a) => {\\n    rl.question('', (b) => {\\n        console.log(`Sum: ${parseInt(a) + parseInt(b)}`);\\n        rl.close();\\n    });\\n});\",\r\n    \"language\": \"javaScript\",\r\n    \"stdin\": \"5\\n10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]}],"id":"7b1606a4-aaad-4a1e-ac03-2772f11703b5","description":"Create and execute code that takes input from stdin and is supposed to return successfully (with the exception of javascript, which does not have a \"stdin\")."},{"name":"Create and execute code 2.2","item":[{"name":"executing c code with stdin and compile time error","id":"f8d3da0e-4ecd-421d-9c27-0e6c8a461776","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a, b;\\n    scanf(\\\"%d %d\\\", &a, &b)\\n    printf(\\\"Sum: %d\\\\n\\\", a + b);\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c code with stdin and runtime error","id":"73ca73c3-95ef-43e0-89a2-b891012bf960","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a, b;\\n    scanf(\\\"%d %d\\\", &a, &b);\\n    printf(\\\"Sum: %d\\\\n\\\", a / b);\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"5 0\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c++ code with stdin and compile time error","id":"9623d3bd-ca43-49d6-a8e7-aa9315b1343f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a, b;\\n    cin >> a >> b\\n    cout << \\\"Sum: \\\" << (a + b) << endl;\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing c++ code with stdin and runtime error","id":"b37d3725-278d-4deb-98b3-d2ccb9e25112","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int a, b;\\n    cin >> a >> b;\\n    cout << \\\"Sum: \\\" << (a / b) << endl;\\n    return 0;\\n}\",\r\n    \"language\": \"c++\",\r\n    \"stdin\": \"5 0\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing java code with stdin and compile time error","id":"d2da48f0-0a8c-4a5b-b054-e57f7dab10b3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"import java.util.Scanner;\\n\\npublic class HelloWorld {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int a = scanner.nextInt();\\n        int b = scanner.nextInt();\\n        System.out.println(\\\"Sum: \\\" + (a + b))\\n    }\\n}\",\r\n    \"language\": \"java\",\r\n    \"stdin\": \"5 10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing java code with stdin and runtime error","id":"7abfa244-5975-4aa5-a68c-c2c611dc18b2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"import java.util.Scanner;\\n\\npublic class HelloWorld {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int a = scanner.nextInt();\\n        int b = scanner.nextInt();\\n        System.out.println(\\\"Sum: \\\" + (a / b));\\n    }\\n}\",\r\n    \"language\": \"java\",\r\n    \"stdin\": \"5 0\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing python code with syntax error","id":"6f548953-52d0-4158-b773-8a466cc245f5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"a = int(input())\\nb = int(input())\\nprint(f'Sum: {a + b}'\",\r\n    \"language\": \"python\",\r\n    \"stdin\": \"5\\n10\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]},{"name":"executing python code with stdin and runtime error","id":"4a8b860a-0a44-431b-ba13-acf2b7a5e5ae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"a = int(input())\\nb = int(input())\\nprint(f'Sum: {a / b}')\",\r\n    \"language\": \"python\",\r\n    \"stdin\": \"5\\n0\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec"]}},"response":[]}],"id":"9840d370-13f7-4df8-97e4-a62c0dac89fa","description":"Creating and Executing code that does not belong to any code templates and is supposed to return either a runtime or a compile-time error with a 400 bad request while also taking input from stdin.\n\nJavascript does not have stdin. Please reference 2.1 \"executing javascript code with stdin (does not support stdin!)\""},{"name":"Create code 1.1","item":[{"name":"creating python code struct that belongs to a code template","id":"a654e824-c7c2-49c7-8bcf-ecd71d7bb739","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"a = int(input())\\nb = int(input())\\nprint(f'Sum: {a + b}')\",\r\n    \"language\": \"python\",\r\n    \"stdin\": \"5\\n10\",\r\n    \"codeTemplateId\":\"5\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec/create","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec","create"]},"description":"## Creating a code object that belongs to a code template object\n\n`POST /api/codeExec/create`\n\nThis endpoint allows the user to create a code object which belongs to a code template object.\n\n### Request Body\n\n- `body`: (string, required) The body of the code object.\n    \n- `language`: (string, required) The language in which the code is written.\n    \n- `stdin`: (string, optional) The stdin input to the program.\n    \n\n### Response\n\nThe response will be in JSON format with the following schema:\n\nJSON\n\n``` json\n{\n    \"code\": {\n        \"codeId\": 92,\n        \"body\": \"a = int(input())\\nb = int(input())\\nprint(f'Sum: {a + b}')\",\n        \"language\": \"python\",\n        \"stdin\": \"5\\n10\",\n        \"path\": \"C:\\\\Users\\\\your_paths_here\\\\group_7328\\\\PP1\\\\generated\\\\code\\\\code_1730766948117.py\",\n        \"stdout\": null,\n        \"stderr\": null,\n        \"codeTemplateId\": 5\n    }\n}\n\n ```"},"response":[]}],"id":"88860e7e-025d-4aca-82ed-a960e725bb3a","description":"Creating a code object that belongs to a code template object."},{"name":"Run code 1.1","item":[{"name":"execute code from code template based on code template id","id":"6305307e-ea5b-4f9f-b524-438a2fb20397","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"codeTemplateId\":\"5\",\r\n    \"stdin\":\"10\\n6\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec/run","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec","run"]},"description":"## Executing the code object of a code template object\n\n`POST /api/codeExec/run`\n\nThis endpoint allows the user to run the code of a code template using the provided stdin. If no additional stdin was provided in the request, the program falls back on using the code object's stdin attribute.\n\n### Request Body\n\n- `codeTemplateId` (string, required): The id of the code template whose code object you want to execute.\n    \n- `stdin` (string, optional): The stdin you would like to pass to the code object that you are trying to execute\n    \n\n### Response\n\nThe response will be in JSON format with the following schema:\n\nJSON\n\n``` json\n{\n    \"output\": \"Sum: 16\\r\\n\"\n}\n\n ```"},"response":[]}],"id":"0e65d8e9-1aae-4b74-bbf4-d426ab7939cb","description":"Running a code object that belongs to a code template object."},{"name":"Edit code 1.1","item":[{"name":"edit code from code template id and new code object body","id":"f05d31cd-1b51-42ce-9fac-da95dd7c830e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\r\n    \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a, b;\\n    scanf(\\\"%d %d\\\", &a, &b);\\n    printf(\\\"Sum: %d\\\\n\\\", a + b);\\n    return 0;\\n}\",\r\n    \"language\": \"c\",\r\n    \"stdin\": \"5 10\",\r\n    \"codeTemplateId\":\"4\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec/edit","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec","edit"]},"description":"## Editing the code object of a code template object\n\n`POST /api/codeExec/edit`\n\nThis endpoint allows the user to edit the code object of a code template by providing the updated information for the code object and the code template's id.\n\n### Request Body\n\n- `body`: (string, required) The body of the code object.\n    \n- `language`: (string, required) The language in which the code is written.\n    \n- `stdin`: (string, optional) The stdin input to the program.EndFragment\n    \n- `codeTemplateId` (string, required): The id of the code template whose code object you want to execute.\n    \n\n### Response\n\nThe response will be in JSON format with the following schema:\n\n``` json\n%7B\n%20%20%20%20%22code%22%3A%20%7B\n%20%20%20%20%20%20%20%20%22codeId%22%3A%2088%2C\n        \"body\": \"#include <stdio.h>\\n\\nint main() {\\n    int a, b;\\n    scanf(\\\"%d %d\\\", &a, &b);\\n    printf(\\\"Sum: %d\\\\n\\\", a + b);\\n    return 0;\\n}\",\n%20%20%20%20%20%20%20%20%22language%22%3A%20%22c%22%2C\n%20%20%20%20%20%20%20%20%22stdin%22%3A%20%225%2010%22%2C\n%20%20%20%20%20%20%20%20%22path%22%3A%20%22C%3A%5C%5CUsers%5C%5Cyour_paths_here%5C%5Cgroup_7328%5C%5CPP1%5C%5Cgenerated%5C%5Ccode%5C%5Ccode_1730764363662.py%22%2C\n%20%20%20%20%20%20%20%20%22stdout%22%3A%20null%2C\n%20%20%20%20%20%20%20%20%22stderr%22%3A%20null%2C\n%20%20%20%20%20%20%20%20%22codeTemplateId%22%3A%204\n%20%20%20%20%7D\n%7D\n\n ```"},"response":[]}],"id":"5049e844-82c6-47a0-8d47-83c84a028773","description":"Editing a code object that belongs to a code template object."},{"name":"Delete code 1.1","item":[{"name":"http://localhost:3000/api/codeExec/delete","id":"2a86156a-bbb7-4fa4-ae8c-95169bd4952d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"body":{"mode":"raw","raw":"{\r\n    \"codeTemplateId\":\"4\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/api/codeExec/delete","protocol":"http","host":["localhost"],"port":"3000","path":["api","codeExec","delete"]},"description":"## Executing the code object of a code template object\n\n`POST /api/codeExec/delete`\n\nThis endpoint allows the user to delete the code object of a code template object. Notice that this endpoint only actually disconnects the code object of a code template object from the code template. It does not permanently delete the code object in the database to open the possibility of undoing actions.\n\n### Request Body\n\n- `codeTemplateId` (string, required): The id of the code template whose code object you want to delete.\n    \n\n### Response\n\nThe response will be in JSON format with the following schema:\n\n``` json\n{\n    \"codeTemplate\": {\n        \"templateId\": 4,\n        \"userId\": 1,\n        \"title\": \"my first code template\",\n        \"explanation\": \"adding 10 + 5 in python\",\n        \"codeId\": null,\n        \"language\": \"python\",\n        \"isDeleted\": false,\n        \"isHidden\": false,\n        \"createdAt\": \"2024-11-03T23:03:21.796Z\"\n    }\n}\n\n ```"},"response":[]}],"id":"4e867d1c-cfa2-4cf0-aa49-8b82ca16d709","description":"Disconnects the code object of a code template object from the code template. Does not permanently delete the code object in the database to open the possibility of undoing actions."}]}